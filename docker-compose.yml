services:
  app:
    build:
      context: ./backend/sigma-api/
      dockerfile: Dockerfile
    container_name: SIGMA-API
    ports:
      - "8500:8500"
    networks:
      - dev-network
    command: ["sh", "-c", "yarn migration:run && yarn start"]
    depends_on:
      - postgres
      - redis
      - mosquitto
  
  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    container_name: SIGMA-FRONTEND
    ports:
      - "3000:3000"
    networks:
      - dev-network
    depends_on:
      - app
    environment:
      - NODE_ENV=production
    command: "yarn start"

  nginx:
    image: nginx:latest
    container_name: SIGMA-NGINX
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - dev-network
    depends_on:
      - frontend
      - app

  mqtt:
    build:
      context: ./backend/mqtt/
      dockerfile: Dockerfile
    container_name: SIGMA-MQTT
    ports:
      - "1890:1883"
    networks:
      - dev-network
    depends_on:
      - mosquitto
      - redis
      - app

  postgres:
    image: postgres:15
    container_name: SIGMA-POSTGRES
    restart: always
    env_file:
      - ./backend/sigma-api/.env
    ports:
      - "5451:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "db_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4
    container_name: SIGMA-REDIS
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - dev-network
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: SIGMA-MOSQUITTO
    restart: always
    ports:
      - "1886:1883" 
      - "9002:9001" 
    volumes:
      - mosquitto-data:/mosquitto/data
      - ./backend/mqtt/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto-logs:/mosquitto/log
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "healthcheck", "-h", "localhost", "-C", "1"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  dev-network:
    driver: bridge

volumes:
  postgres-data: {}
  redis-data: {}
  mosquitto-data: {}
  config:
  mosquitto-logs: {}
